<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- Uncomment and your base-package here: <context:component-scan base-package="org.springframework.samples.web"/> -->
	<context:component-scan base-package="com.ejuzuo.admin.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 资源过滤 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<bean class="com.ejuzuo.admin.resolver.AjaxHandlerExceptionResolver"/>
	
	<bean id="viewResolver2" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	
	<!-- <mvc:annotation-driven ignore-default-model-on-redirect="true">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven> -->
	<!-- <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven> -->
	
	<bean id="validator" class='org.springframework.validation.beanvalidation.LocalValidatorFactoryBean'/>
	<bean id="conversionService" class="org.springframework.format.support.DefaultFormattingConversionService"/>
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<property name="webBindingInitializer">
			<bean class="com.ejuzuo.admin.webBindType.CustomerWebBindingInitializer">
				<property name="validator" ref="validator" />
				<property name="conversionService" ref="conversionService" />
            </bean> 
  		</property> 
		<property name="messageConverters">  
			<list>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="objectMapper">
						<bean class="com.fasterxml.jackson.databind.ObjectMapper">
							<property name="dateFormat">
								<bean class="java.text.SimpleDateFormat">
									<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
								</bean>
							</property>
						</bean>
					</property>
				</bean>
				<!-- <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
		            <property name="supportedMediaTypes">
		                <list>
		                    <value>image/jpeg</value>
		                    <value>image/png</value>
		                </list>
		            </property>
		        </bean> -->
			</list>  
		</property>
	</bean>
	
	<bean id="kaptchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg type="java.util.Properties">
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.image.width">134</prop>
						<prop key="kaptcha.image.height">30</prop>
						<!-- <prop key="kaptcha.textproducer.char.string">ABCDEFGHIJKL0123456789MNOPQRSTUVWXYZ</prop> -->
						<prop key="kaptcha.textproducer.char.string">0123456789</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.size">25</prop>
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
						<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
						<!-- <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.WaterRipple</prop> -->
						<!-- <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.FishEyeGimpy</prop> -->
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="utf-8"></property>   
        <property name="maxUploadSize" value="350715200"></property>  
        <property name="maxInMemorySize" value="40960"></property>  
   </bean>
	
	<!-- 切面 : 用户行为日志 -->
	<!-- <aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true"/> -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
</beans>
