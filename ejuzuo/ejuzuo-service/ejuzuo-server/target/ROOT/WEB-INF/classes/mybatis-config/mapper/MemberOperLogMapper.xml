<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="MemberOperLogMapper" >
  <resultMap id="BaseResultMap" type="MemberOperLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="oper_type" property="operType" jdbcType="TINYINT" typeHandler="org.apache.ibatis.type.IntegerTypeHandler" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime"  />
    <!--  -->
    <result column="nick_name" property="nickName"  />
    <result column="account" property="account"  />
  </resultMap>

  <sql id="BaseColumn">
    id, member_id, oper_type, remark, create_time
  </sql>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from member_oper_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="save" parameterType="MemberOperLog" keyProperty="id" useGeneratedKeys="true">
    insert into member_oper_log ( member_id, oper_type,
      remark, create_time)
    values ( #{memberId,jdbcType=INTEGER}, #{operType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.IntegerTypeHandler},
      #{remark,jdbcType=VARCHAR}, #{createTime})
  </insert>
  <update id="updateById" parameterType="MemberOperLog" >
    update member_oper_log
    set member_id = #{memberId,jdbcType=INTEGER},
      oper_type = #{operType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.IntegerTypeHandler},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select <include refid="BaseColumn"/>
    from member_oper_log
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="queryOperLogToday" parameterType="map" resultMap="BaseResultMap">
    select <include refid="BaseColumn"/>
    from member_oper_log
    where member_id =#{memberId} and oper_type=#{operType}
    and create_time >#{startTime}
    <![CDATA[
    and create_time <=#{endTime}
    ]]>
  </select>
  
  <sql id="option">
  	<where>
  	  <if test="memberId != null">and c.member_id = #{memberId}</if>
  	  <if test="operType != null">and c.oper_type = #{operType}</if>
  	  <if test="startTime != null"><![CDATA[and c.create_time >= #{startTime}]]></if>
  	  <if test="endTime != null"><![CDATA[and c.create_time <= #{endTime}]]></if>
  	</where>
  </sql>
  <select id="countPage" parameterType="map" resultType="java.lang.Integer" >
  	select count(*)
  	from member_oper_log c
  	<include refid="option"/>
  </select>
  <select id="queryPage" parameterType="map" resultMap="BaseResultMap">
  	select c.id, c.member_id, c.oper_type, c.remark, c.create_time, ct.nick_name, ct.account
    from member_oper_log c LEFT JOIN member ct ON c.member_id = ct.id
    <include refid="option"/>
    <choose>
		<when test="orderBy != null and order != null">order by ${orderBy} ${order}</when>
		<otherwise>order by id desc</otherwise>
	</choose>
		limit ${startIndex}, ${pageSize}
  </select>
</mapper>