<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AdminRoleMapper">
	<resultMap id="BaseResultMap" type="AdminRole">
		<id property="id" column="id" />
		<result property="roleName" column="role_name" />
		<result property="roleCode" column="role_code" />
		<result property="status" column="status" />
		<result property="remark" column="remark" />
	</resultMap>

	<sql id="All_Column_List">
		id, role_name, role_code, status, remark
	</sql>
	
	<select id="generateSequence" resultType="long">
		select seq_admin_role.nextval from dual
	</select>
	
	<insert id="insert" parameterType="AdminRole" useGeneratedKeys="true" keyProperty="id">
		insert into admin_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleName != null">role_name,</if>
			<if test="roleCode != null">role_code,</if>
			<if test="status != null">status,</if>
			<if test="remark != null">remark,</if>
		</trim>
		VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleName != null">#{roleName},</if>
			<if test="roleCode != null">#{roleCode},</if>
			<if test="status != null">#{status},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
	</insert>
	
	<update id="update" parameterType="AdminRole">
		update admin_role 
		<set>
			<if test="roleName != null">role_name = #{roleName},</if>
			<if test="roleCode != null">role_code = #{roleCode},</if>
			<if test="status != null">status = #{status},</if>
			<if test="remark != null">remark = #{remark},</if>
		</set>
		<where>id = #{id}</where>
	</update>
	
	<select id="queryAll" resultMap="BaseResultMap">
		select <include refid="All_Column_List"/> from admin_role order by id asc
	</select>
	
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select <include refid="All_Column_List"/> from admin_role 
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="roleName != null">and role_name = #{roleName}</if>
		</where>
	</select>
	
	<select id="queryByIds" parameterType="map" resultMap="BaseResultMap">
		select <include refid="All_Column_List"/> from admin_role 
		<where>id in 
			<foreach collection="ids" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
		</where>
		order by id asc
	</select>
	
	<sql id="sqlOfPage">
		<where>
			<if test="roleName != null">and role_name like #{roleName}</if>
			<if test="status != null">and status = #{status}</if>
		</where>
	</sql>
	<select id="countPage" resultType="Integer">
		select count(*) from admin_role <include refid="sqlOfPage"/>
	</select>
	<select id="queryPage" resultMap="BaseResultMap" parameterType="map">
		select <include refid="All_Column_List"/> from admin_role
		<include refid="sqlOfPage"/> order by id asc limit ${startIndex}, ${offset}
	</select>
	<!-- <select id="queryPage" resultMap="BaseResultMap" parameterType="map">
		select * from (
			select r.*, rownum rn from (
				select <include refid="All_Column_List"/> from admin_role
				<include refid="sqlOfPage"/> order by id asc
			) r <where><![CDATA[rownum <= #{endIndex}]]></where>	
		) <where>rn > #{startIndex}</where>
	</select> -->
	
</mapper>